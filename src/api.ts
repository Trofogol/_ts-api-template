// this code was generated by chatgpt 3.5

import express, { Request, Response } from 'express';

const app = express();
const port = 3000;

// Middleware to parse JSON body
app.use(express.json());

// Helper function to simulate asynchronous tasks with random delays
const delay = (min: number, max: number) =>
  new Promise((resolve) => {
    const delay = Math.random() * (max - min) + min;
    setTimeout(resolve, delay * 1000);
  });

// GET request handler
app.get('/', async (_, res: Response) => {
  const start = Date.now();

  // Perform three parallel actions
  const [stream1, stream2, stream3] = await Promise.all([
    (async () => {
      await delay(1, 3);
      return 'Stream 1, Hello World, stream 2 should count a multiplication result of two random numbers in range between -50 to 50';
    })(),
    (async () => {
      await delay(1, 3);
      const num1 = Math.floor(Math.random() * 101) - 50;
      const num2 = Math.floor(Math.random() * 101) - 50;
      return {
        num1,
        num2,
        'num-result': num1 * num2,
      };
    })(),
    (async () => {
      await delay(1, 3);
      return 'Stream 3 was there as well';
    })(),
  ]);

  console.log('Streams 1 and 2 are completed');
  console.log(`Stream 1 took ${Date.now() - start}ms`);
  console.log(`Stream 2 took ${Date.now() - start}ms`);
  console.log('Stream 3 is completed');
  console.log(`Stream 3 took ${Date.now() - start}ms`);

  res.json({ stream1, stream2, stream3 });
});

// POST request handler
app.post('/', (req: Request, res: Response) => {
  console.log('Received POST request:');
  console.log(req.body);
  res.send('received POST request');
});

// PUT request handler
app.put('/', (req: Request, res: Response) => {
  console.log('Received PUT request:');
  console.log(req.body);
  res.send('received PUT request');
});

// DELETE request handler
app.delete('/', (req: Request, res: Response) => {
  console.log('Received DELETE request:');
  console.log(req.body);
  res.send('received DELETE request');
});

// Start the server
app.listen(port, () => {
  console.log(`Server is listening on port ${port}`);
});